buildscript {
    ext.kotlin_version = '1.2.51'
    ext.tornado_version = '1.7.16'
    ext.rxkotlin_version = '2.2.0'
    ext.rxkotlinfx_version = '2.2.2'
    ext.jfoenix_version = '8.0.4'
    ext.requery_version = '1.5.1'
    ext.sqlite_jdbc = '3.25.2'
    ext.sqlDirPath = [projectDir.path, "src", "main", "resources", "sql", "CreateAppDb.sql"].join(File.separator)

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "https://maven.ej-technologies.com/repository"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
// commenting out the jfx plugin for now since we are bundling the Oracle JRE
//        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.8.2'
    }
}

plugins {
    id 'java'
    id 'java-library'
}

group 'org.wycliffeassociates'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
//apply plugin: 'javafx-gradle-plugin'

sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url 'https://mvnrepository.com/artifac/' }
    maven { url "https://dl.bintray.com/kotlin/exposed" }
    maven { url "https://dl.bintray.com/dua3/public" }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    //ReactiveX
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version"
    implementation "com.github.thomasnield:rxkotlinfx:$rxkotlinfx_version"

    //TornadoFX
    implementation "no.tornado:tornadofx:$tornado_version"

    //JFoenix
    implementation "com.jfoenix:jfoenix:$jfoenix_version"

    //FontAwesomeFX
    implementation "de.jensd:fontawesomefx-commons:9.1.2-jpms"
    implementation "de.jensd:fontawesomefx-materialicons:2.2.0-9.1.2-jpms"
    implementation "de.jensd:fontawesomefx-icons525:4.2.0-9.1.2-jpms"
    implementation "de.jensd:fontawesomefx-materialdesignfont:1.7.22-4"
}

//tell gradle what to put in the jar
jar {
    manifest {
        attributes(
                'Main-Class': "org.wycliffeassociates.otter.recorder.app.MainKt"
        )
    }
    from (configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude "META-INF/MANIFEST.MF"
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}

//////////////////////////////////// Custom Tasks ///////////////////////////////////////////
def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

task printVersionName{
    doLast {
        println getVersionName()
    }
}